{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/view.ts","webpack:///./src/payment.ts","webpack:///./src/index.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","handler","f","handleEvent","plus","a","b","gradeNames","model","[object Object]","paymentData","this","_data","data","total","undefined","diffParam","trancate","counts","result","isComputable","wasComputed","computePayment","unit","participantsCount","reduce","payments","map","_","remainder","C","view","payment","document","querySelector","gradeIndex","build_input_participants","addEventListeners","input_participants","template","forEach","gradeName","index","conatiner","importNode","content","divs","querySelectorAll","gradeText","textContent","id","children","appendChild","parse","match","parseInt","total_field","addEventListener","e","update","target","max_fraction_field","diff_parameter_slider","updateAndCompute","participants_counts_field","updateData","validated","validateData","showData","assign","diffParamMax","showResult","toString","max","diff_value","paymentResult","payment_amount","output_remainder","prev","Math","floor","min","window","onload","initialize","console","log"],"mappings":"aACA,IAAAA,EAAA,GAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAC,QAGA,IAAAC,EAAAJ,EAAAE,GAAA,CACAG,EAAAH,EACAI,GAAA,EACAH,QAAA,IAUA,OANAI,EAAAL,GAAAM,KAAAJ,EAAAD,QAAAC,IAAAD,QAAAF,GAGAG,EAAAE,GAAA,EAGAF,EAAAD,QAKAF,EAAAQ,EAAAF,EAGAN,EAAAS,EAAAV,EAGAC,EAAAU,EAAA,SAAAR,EAAAS,EAAAC,GACAZ,EAAAa,EAAAX,EAAAS,IACAG,OAAAC,eAAAb,EAAAS,EAAA,CAA0CK,YAAA,EAAAC,IAAAL,KAK1CZ,EAAAkB,EAAA,SAAAhB,GACA,oBAAAiB,eAAAC,aACAN,OAAAC,eAAAb,EAAAiB,OAAAC,YAAA,CAAwDC,MAAA,WAExDP,OAAAC,eAAAb,EAAA,cAAiDmB,OAAA,KAQjDrB,EAAAsB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAArB,EAAAqB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAX,OAAAY,OAAA,MAGA,GAFA1B,EAAAkB,EAAAO,GACAX,OAAAC,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAArB,EAAAU,EAAAe,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAzB,EAAA6B,EAAA,SAAA1B,GACA,IAAAS,EAAAT,KAAAqB,WACA,WAA2B,OAAArB,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAH,EAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,EAAAa,EAAA,SAAAiB,EAAAC,GAAsD,OAAAjB,OAAAkB,UAAAC,eAAA1B,KAAAuB,EAAAC,IAGtD/B,EAAAkC,EAAA,GAIAlC,IAAAmC,EAAA,kCClFA,SAAAC,EAAAC,GACA,OACAC,YAAAD,UC6DA,MAAAE,EAAA,CAAAC,EAAAC,IAAAD,EAAAC,EC7DAC,EAAA,oCAOAC,EAAA,IDTO,MACPC,YAAAC,GACAC,KAAAC,MAAAF,EAEAG,WACA,OAAAF,KAAAC,MAEAH,OAAAI,GAOA,OANAF,KAAAC,MAAA,CACAE,WAAAC,IAAAF,EAAAC,MAAAD,EAAAC,MAAAH,KAAAC,MAAAE,MACAE,eAAAD,IAAAF,EAAAG,UAAAH,EAAAG,UAAAL,KAAAC,MAAAI,UACAC,cAAAF,IAAAF,EAAAI,SAAAJ,EAAAI,SAAAN,KAAAC,MAAAK,SACAC,YAAAH,IAAAF,EAAAK,OAAAL,EAAAK,OAAAP,KAAAC,MAAAM,QAEA,CACAL,KAAAF,KAAAC,MACAO,OAAAR,KAAAS,aAAAT,KAAAC,OACA,CAAiBS,aAAA,GAAqBV,KAAAW,eAAAX,KAAAC,QAgBtCH,eAAAI,GACA,MAAAP,EAAAO,EAAAG,UACAF,EAAAD,EAAAC,MACAS,EAAAV,EAAAI,SACAC,EAAAL,EAAAK,OACAM,EAAAN,EAAAO,OAAArB,GACA,MAAAoB,GAAA,GAAAD,EACA,OACAF,aAAA,EACAK,SAAAb,EAAAK,OAAAS,IAAAC,GAAA,GACAC,UAAAf,GAGA,MAAAgB,EAAAZ,EAAAS,IAAA,CAAArD,EAAAL,IAAAK,EAAAL,GAAAwD,OAAArB,GACAyB,GAAAf,EAAAR,EAAAiB,EAAAO,IAAAN,EAAAD,GACAlB,GAAAS,EAAAe,EAAAvB,EAAAiB,EAAAO,IAAAN,EAAAD,GAEA,OACAF,aAAA,EACAK,SAHAb,EAAAK,OAAAS,IAAA,CAAAC,EAAA3D,IAAAoC,EAAAkB,EAAAtD,EAAAqC,EAAAiB,GAIAM,aAGApB,aAAAI,GACA,OAAAA,EAAAC,OAAA,GACAD,EAAAI,UAAA,GACAJ,EAAAG,UAAA,GACAH,EAAAK,OAAAS,IAAArD,KAAA,GAAAmD,OAAA,CAAApB,EAAAC,IAAAD,GAAAC,KCzDA,CACAY,OAAAX,EAAAoB,IAAAC,GAAA,GACAd,MAAA,EACAE,UAAA,EACAC,SAAA,KAGAc,EAAA,IFLO,MACPtB,YAAAF,EAAAyB,GACArB,KAAAJ,WAAA,IAAAA,GACAI,KAAAqB,UAEAvB,cACA,OAAAwB,SAAAC,cAAA,gBAEAzB,qBACA,OAAAwB,SAAAC,cAAA,uBAEAzB,wBACA,OAAAwB,SAAAC,cAAA,0BAEAzB,aACA,OAAAwB,SAAAC,cAAA,eAEAzB,0BAAA0B,GACA,OAAAF,SAAAC,cAAA,6BAAAC,GAEA1B,eAAA0B,GACA,OAAAF,SAAAC,cAAA,kBAAAC,GAEA1B,mBACA,OAAAwB,SAAAC,cAAA,0BAEAzB,aACAE,KAAAyB,2BACAzB,KAAA0B,oBAEA5B,2BACA,MAAA6B,EAAAL,SAAAC,cAAA,uBACAK,EAAAN,SAAAC,cAAA,+BACAvB,KAAAJ,WAAAiC,QAAA,CAAAC,EAAAC,KACA,MACAC,EADAV,SAAAW,WAAAL,EAAAM,SAAA,GACAX,cAAA,OACAY,EAAAH,EAAAI,iBAAA,OACAC,EAAAF,EAAA,GACAE,EAAAC,YAAAR,EACAO,EAAAE,GAAA,aAAAR,EACAI,EAAA,GAAAK,SAAA,GACAD,GAAA,4BAAAR,EACAI,EAAA,GAAAK,SAAA,GACAD,GAAA,iBAAAR,EACAJ,EAAAc,YAAAT,KAGAlC,oBACA,MAAA4C,EAAA3D,GAA8C,OAA9CA,EAAA4D,MAAA,aAA8C,EAAAC,SAAA7D,GAC9CiB,KAAA6C,cAAAC,iBAAA,SAAAxD,EAAAyD,GAAA/C,KAAAgD,OAAA,CAAgF7C,MAAAuC,EAAAK,EAAAE,OAAA1E,WAChFyB,KAAAkD,qBAAAJ,iBAAA,SAAAxD,EAAAyD,GAAA/C,KAAAgD,OAAA,CAAuF1C,SAAAoC,EAAAK,EAAAE,OAAA1E,WACvFyB,KAAAmD,wBAAAL,iBAAA,QAAAxD,EAAAyD,GAAA/C,KAAAoD,iBAAA,CAAmG/C,UAAAqC,EAAAK,EAAAE,OAAA1E,WACnGyB,KAAAJ,WAAAiC,QAAA,CAAAZ,EAAAc,IAAA/B,KAAAqD,0BAAAtB,GAAAe,iBAAA,SAAAxD,EAAAyD,GAAA/C,KAAAoD,iBAAA,CAAmJ7C,OAAAP,KAAAqB,QAAAnB,KAAAK,OAAAS,IAAA,CAAArD,EAAAL,QAAAyE,EAAAW,EAAAK,EAAAE,OAAA1E,OAAAZ,QAEnJmC,OAAAwD,GACA,MAAAC,EAAAvD,KAAAwD,aAAAF,IACApD,KAAeA,GAAQF,KAAAqB,QAAA2B,OAAAM,GACvBtD,KAAAyD,SAAAzF,OAAA0F,OAAAxD,EAAA,CAA2CyD,aAAAJ,EAAAI,gBAE3C7D,iBAAAwD,GACA,MAAAC,EAAAvD,KAAAwD,aAAAF,IACApD,KAAeA,EAAAM,UAAeR,KAAAqB,QAAA2B,OAAAM,GAC9BtD,KAAAyD,SAAAzF,OAAA0F,OAAAxD,EAAA,CAA2CyD,aAAAJ,EAAAI,gBAC3C3D,KAAA4D,WAAA1D,EAAAM,GAEAV,SAAAI,GACAF,KAAA6C,cAAAtE,MAAA2B,EAAAC,MAAA0D,WACA7D,KAAAkD,qBAAA3E,MAAA2B,EAAAI,SAAAuD,WACA3D,EAAAK,OAAAsB,QAAA,CAAAlE,EAAAL,IAAA0C,KAAAqD,0BAAA/F,GAAAiB,MAAAZ,EAAAkG,YACA7D,KAAAmD,wBAAAW,IAAA5D,EAAAyD,aAAAE,WACA7D,KAAA+D,aAAAzB,aAAApC,EAAAI,SAAAJ,EAAAG,WAAAwD,WAEA/D,WAAAC,EAAAiE,GACAA,EAAAtD,cACAsD,EAAAjD,SAAAc,QAAA,CAAAR,EAAAG,KACA,MAAAyC,EAAAjE,KAAAiE,eAAAzC,GACAzB,EAAAQ,OAAAiB,GAAA,EACAyC,EAAA3B,YAAAjB,EAAAwC,WAGAI,EAAA3B,YAAA,MAGAtC,KAAAkE,mBAAA5B,YAAA0B,EAAA9C,UAAA2C,YAGA/D,aAAAI,GACA,MAAAiE,EAAAnE,KAAAqB,QAAAnB,KACAK,QAAAH,IAAAF,EAAAK,OAAAL,EAAAK,OAAA4D,EAAA5D,QACAS,IAAArD,GAAAyG,KAAAN,IAAA,EAAAnG,IACAwC,EAAAiE,KAAAN,IAAA,OAAA1D,IAAAF,EAAAC,MAAAD,EAAAC,MAAAgE,EAAAhE,OACAG,EAAA8D,KAAAN,IAAA,OAAA1D,IAAAF,EAAAI,SAAAJ,EAAAI,SAAA6D,EAAA7D,UACAa,EAAAZ,EAAAS,IAAA,CAAArD,EAAAL,MAAAK,GAAAmD,OAAA,CAAApB,EAAAC,IAAAD,EAAAC,GACAgE,EAAAS,KAAAC,MAAAlE,GAAAG,EAAAa,IAEA,OACAhB,QACAI,SACAD,WACAD,UALA+D,KAAAE,IAAA,EAAAF,KAAAN,IAAAH,OAAAvD,IAAAF,EAAAG,UAAAH,EAAAG,UAAA8D,EAAA9D,YAMAsD,kBE/FqB/D,EAAAC,GACrB0E,OAAAC,OAAA,MACApD,EAAAqD,aACAC,QAAAC,IAAA9E,GACA6E,QAAAC,IAAAvD","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","function handler(f) {\n    return {\n        handleEvent: f\n    };\n}\nexport class View {\n    constructor(gradeNames, payment) {\n        this.gradeNames = [...gradeNames];\n        this.payment = payment;\n    }\n    total_field() {\n        return document.querySelector(\"#total_field\");\n    }\n    max_fraction_field() {\n        return document.querySelector(\"#max_fraction_field\");\n    }\n    diff_parameter_slider() {\n        return document.querySelector(\"#diff_parameter_slider\");\n    }\n    diff_value() {\n        return document.querySelector(\"#diff_value\");\n    }\n    participants_counts_field(gradeIndex) {\n        return document.querySelector(\"#participants_counts_field\" + gradeIndex);\n    }\n    payment_amount(gradeIndex) {\n        return document.querySelector(\"#payment_amount\" + gradeIndex);\n    }\n    output_remainder() {\n        return document.querySelector(\"#output_remainder_text\");\n    }\n    initialize() {\n        this.build_input_participants();\n        this.addEventListeners();\n    }\n    build_input_participants() {\n        const input_participants = document.querySelector(\"#input_participants\");\n        const template = document.querySelector(\"#participants_data_template\");\n        this.gradeNames.forEach((gradeName, index) => {\n            const clone = document.importNode(template.content, true);\n            const conatiner = clone.querySelector(\"div\");\n            const divs = conatiner.querySelectorAll(\"div\");\n            const gradeText = divs[0];\n            gradeText.textContent = gradeName;\n            gradeText.id = \"grade_name\" + index;\n            const participants_counts_field = divs[1].children[0];\n            participants_counts_field.id = \"participants_counts_field\" + index;\n            const output = divs[2].children[0];\n            output.id = \"payment_amount\" + index;\n            input_participants.appendChild(conatiner);\n        });\n    }\n    addEventListeners() {\n        const parse = (n) => n.match(/^\\d{1,9}$/) === null ? 0 : parseInt(n);\n        this.total_field().addEventListener(\"change\", handler(e => this.update({ total: parse(e.target.value) })));\n        this.max_fraction_field().addEventListener(\"change\", handler(e => this.update({ trancate: parse(e.target.value) })));\n        this.diff_parameter_slider().addEventListener(\"input\", handler(e => this.updateAndCompute({ diffParam: parse(e.target.value) })));\n        this.gradeNames.forEach((_, index) => this.participants_counts_field(index).addEventListener(\"change\", handler(e => this.updateAndCompute({ counts: this.payment.data.counts.map((c, i) => i === index ? parse(e.target.value) : c) }))));\n    }\n    update(updateData) {\n        const validated = this.validateData(updateData);\n        const { data, } = this.payment.update(updateData);\n        this.showData(Object.assign(data, { diffParamMax: validated.diffParamMax }));\n    }\n    updateAndCompute(updateData) {\n        const validated = this.validateData(updateData);\n        const { data, result } = this.payment.update(updateData);\n        this.showData(Object.assign(data, { diffParamMax: validated.diffParamMax }));\n        this.showResult(data, result);\n    }\n    showData(data) {\n        this.total_field().value = data.total.toString();\n        this.max_fraction_field().value = data.trancate.toString();\n        data.counts.forEach((c, i) => this.participants_counts_field(i).value = c.toString());\n        this.diff_parameter_slider().max = data.diffParamMax.toString();\n        this.diff_value().textContent = (data.trancate * data.diffParam).toString();\n    }\n    showResult(paymentData, paymentResult) {\n        if (paymentResult.wasComputed) {\n            paymentResult.payments.forEach((payment, gradeIndex) => {\n                const payment_amount = this.payment_amount(gradeIndex);\n                if (paymentData.counts[gradeIndex] > 0) {\n                    payment_amount.textContent = payment.toString();\n                }\n                else {\n                    payment_amount.textContent = \"0\";\n                }\n            });\n            this.output_remainder().textContent = paymentResult.remainder.toString();\n        }\n    }\n    validateData(data) {\n        const prev = this.payment.data;\n        const counts = (data.counts !== undefined ? data.counts : prev.counts)\n            .map(c => Math.max(0, c));\n        const total = Math.max(0, (data.total !== undefined ? data.total : prev.total));\n        const trancate = Math.max(1, (data.trancate !== undefined ? data.trancate : prev.trancate));\n        const C = counts.map((c, i) => i * c).reduce((a, b) => a + b);\n        const diffParamMax = Math.floor(total / (trancate * C));\n        const diffParam = Math.min(0, Math.max(diffParamMax, (data.diffParam !== undefined ? data.diffParam : prev.diffParam)));\n        return {\n            total: total,\n            counts: counts,\n            trancate: trancate,\n            diffParam: diffParam,\n            diffParamMax: diffParamMax\n        };\n    }\n}\n","export class Payment {\n    constructor(paymentData) {\n        this._data = paymentData;\n    }\n    get data() {\n        return this._data;\n    }\n    update(data) {\n        this._data = {\n            total: data.total !== undefined ? data.total : this._data.total,\n            diffParam: data.diffParam !== undefined ? data.diffParam : this._data.diffParam,\n            trancate: data.trancate !== undefined ? data.trancate : this._data.trancate,\n            counts: data.counts !== undefined ? data.counts : this._data.counts\n        };\n        return {\n            data: this._data,\n            result: this.isComputable(this._data) ?\n                { wasComputed: false } : this.computePayment(this._data)\n        };\n    }\n    /**\n     * Computes x_i and r.\n     * b is a given parameter defines d.\n     * t is tortal payment.\n     * u is tracate unit.\n     * d = b*u is difference of payment.\n     * i is integer value of grade.\n     * c_i is count of participants who are i-th grade.\n     * n = sum of c_i is count of all participants.\n     * C = sum of i*c_i is count of all weighted participants counts.\n     * a = (t - r - b*u*C)/(n*u) is\n     * x_i = a*u + i*d is payment of a participant who is i-th grade.\n     */\n    computePayment(data) {\n        const b = data.diffParam;\n        const total = data.total;\n        const unit = data.trancate;\n        const counts = data.counts;\n        const participantsCount = counts.reduce(plus);\n        if (participantsCount == 0 || unit == 0) {\n            return {\n                wasComputed: true,\n                payments: data.counts.map(_ => 0),\n                remainder: total\n            };\n        }\n        const C = counts.map((c, i) => c * i).reduce(plus);\n        const remainder = (total - b * unit * C) % (participantsCount * unit);\n        const a = (total - remainder - b * unit * C) / (participantsCount * unit);\n        const payments = data.counts.map((_, i) => a * unit + i * b * unit);\n        return {\n            wasComputed: true,\n            payments: payments,\n            remainder: remainder\n        };\n    }\n    isComputable(data) {\n        return data.total <= 0 ||\n            data.trancate <= 0 ||\n            data.diffParam < 0 ||\n            data.counts.map(c => c < 0).reduce((a, b) => a || b);\n    }\n}\nconst plus = (a, b) => a + b;\n","import { View } from \"./view\";\nimport { Payment } from \"./payment\";\nconst gradeNames = [\"1年\", \"2年\", \"3年\", \"4年\", \"M1\", \"M2\", \"D\"];\nconst initData = {\n    counts: gradeNames.map(_ => 0),\n    total: 0,\n    diffParam: 0,\n    trancate: 50\n};\nconst model = new Payment(initData);\nconst view = new View(gradeNames, model);\nwindow.onload = () => {\n    view.initialize();\n    console.log(model);\n    console.log(view);\n};\n"],"sourceRoot":""}